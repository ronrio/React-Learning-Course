{"version":3,"sources":["components/card/card.components.jsx","logo.svg","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeHolder","handleChange","type","placeholder","onChange","App","state","searchField","fetch","then","response","json","users","setState","this","filteredMonsters","filter","toLowerCase","includes","e","target","value","console","log","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAEaA,GCFE,I,kBDEK,SAACC,GACjB,OAAO,sBAAKC,UAAU,iBAAf,UACH,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACtB,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,aEFbC,EAAW,SAACR,GACrB,OAAO,qBAAKC,UAAU,YAAf,SAEHD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OAAI,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCJ5CM,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OACrB,uBACIC,KAAK,SACLb,UAAY,SACZc,YAAeH,EACfI,SAAWH,MCwBJI,E,kDA1Bb,aAAc,IAAD,8BACX,gBAEKC,MAAQ,CACXT,SAAS,GACTU,YAAc,IALL,E,gEAQO,IAAD,OACjBC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKC,SAAS,CAAChB,SAAWe,S,+BAElC,IAAD,SACyBE,KAAKR,MAA7BT,EADD,EACCA,SAASU,EADV,EACUA,YACVQ,EAAmBlB,EAASmB,QAAO,SAAAxB,GAAO,OAAIA,EAAQE,KAAKuB,cAAcC,SAASX,EAAYU,kBACpG,OACE,sBAAK5B,UAAU,MAAf,UACE,iDACA,cAAC,EAAD,CAAWW,YAAc,iBAAiBC,aAAiB,SAAAkB,GAAC,OAAI,EAAKN,SAAS,CAACN,YAAcY,EAAEC,OAAOC,QAAQ,kBAAMC,QAAQC,IAAI,EAAKjB,aACrI,cAAC,EAAD,CAAUT,SAAUkB,W,GArBVS,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlB,MAAK,YAAkD,IAA/CmB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.b87887a5.chunk.js","sourcesContent":["import React from 'react'\nimport './card.styles.css'\nexport const Card = (props) =>{\n    return <div className='card-container'>\n        <img alt='monster' src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}/>\n        <h2>{props.monster.name}</h2>\n        <p>{props.monster.email}</p>\n    </div>\n}","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\nimport './card-list.styles.css'\nimport '../card/card.components'\nimport { Card } from '../card/card.components'\nexport const CardList = (props)=>{\n    return <div className='card-list'> \n    {\n        props.monsters.map(monster => <Card key={monster.id} monster={monster}/>)\n    }\n    </div>;\n}","import React from 'react'\nimport './search-box.styles.css'\n\nexport const SearchBox = ({placeHolder, handleChange}) => (\n    <input \n        type='search'\n        className = 'search'\n        placeholder = {placeHolder}\n        onChange= {handleChange} >\n        </input>\n);","import logo from './logo.svg';\nimport './App.css';\nimport { Component } from 'react';\nimport { CardList } from './components/card-list/card-list.component'\nimport { SearchBox } from './components/search-box/search-box.component'\nclass App extends Component{\n  constructor(){\n    super();\n    \n    this.state = {\n      monsters:[],\n      searchField : ''\n    }\n  }\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => this.setState({monsters : users}));\n  }\n  render(){\n    const {monsters,searchField} = this.state;\n    const filteredMonsters = monsters.filter(monster => monster.name.toLowerCase().includes(searchField.toLowerCase()))\n    return (\n      <div className=\"App\">\n        <h1>Monster Rolodex</h1>\n        <SearchBox placeHolder = 'Search Monster' handleChange =  {e => this.setState({searchField : e.target.value}, () => console.log(this.state))}/>\n        <CardList monsters={filteredMonsters}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}